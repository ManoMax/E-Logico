p :: Literal
p = (Psi "" "p")

q :: Literal
q = (Psi "" "q")

pandq :: Literal
pandq =
    (
        Expression
        ""
        p
        "v"
        q
    )
qorpandq :: Literal
qorpandq = 
    (
        Expression
        ""
        q
        "|"
        pandq
    )




-- a & b

buildExpression "" (buildProposition "" "a") "&" (buildProposition "" "b")

-- a & (b | c)

buildExpression "" (buildProposition "" "a") "&" (buildExpression "" (buildProposition "" "b") "|" (buildProposition "" "c"))

-- ~(a | (b & c))

buildExpression "~" (buildProposition "" "a") "|" (buildExpression "" (buildProposition "" "b") "&" (buildProposition "" "c"))

-- a

buildProposition "" "a"

-- ~a

buildProposition "~" "a"

-- ~b

buildProposition "~" "b"